ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

MACHINES = {
    :otuslinux => {
        :box_name => "oraclelinux/8",
        :box_url => "https://oracle.github.io/vagrant-projects/boxes/oraclelinux/8.json",
        :ip_addr => '192.168.56.101',
        :disks => {
            :sata1 => {
                :dfile => './sata1.vdi',
                :size => 10240,
                :port => 1
            },
            :sata2 => {
                :dfile => './sata2.vdi',
                :size => 2048,
                :port => 2
            },
            :sata3 => {
                :dfile => './sata3.vdi',
                :size => 1024,
                :port => 3
            },
            :sata4 => {
                :dfile => './sata4.vdi',
                :size => 1024,
                :port => 4
            },
        }
    },
}

Vagrant.configure("2") do |config|

    MACHINES.each do |boxname, boxconfig|

        config.vm.define boxname do |box|

            box.vm.box = boxconfig[:box_name]
            box.vm.box_url = boxconfig[:box_url]
            box.vm.host_name = boxname.to_s
            box.vm.network "private_network", ip: boxconfig[:ip_addr]
            box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "1024"]
                needsController = false
                boxconfig[:disks].each do |dname, dconf|
                    unless File.exist?(dconf[:dfile])
                        vb.customize ['createmedium', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                        needsController =  true
                    end
                end
                if needsController == true
                    # vb.customize ["storagectl", :id, "--name", "SATA Controller", "--add", "sata" ]
                    boxconfig[:disks].each do |dname, dconf|
                        vb.customize ['storageattach', :id,  '--storagectl', 'SATA Controller', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                    end
                end
            end
 	        box.vm.provision "shell", inline: <<-SHELL
                mkdir -p ~root/.ssh
                    cp ~vagrant/.ssh/auth* ~root/.ssh
            SHELL
        end
    end
end
